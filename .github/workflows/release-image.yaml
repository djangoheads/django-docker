name: Image CI

on:
  push:
    branches:
      - main
    paths:
      - 'docker/**'
      - '.github/workflows/**'

jobs:
  docker:
    strategy:
        matrix:
          version: ${{ fromJSON(vars.PYTHON_VERSIONS) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - name: Update version
        run: |
          TAG=${{ steps.get-latest-tag.outputs.tag }}
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV
      - name: find last
        id: find_last
        run: |
          LAST_VERSION=$(echo ${{vars.PYTHON_VERSIONS}} | jq '.[-1]')
          echo "Last version is $LAST_VERSION"
          echo "::set-output name=last_version::$LAST_VERSION"
      - name: Build and push
        uses: docker/build-push-action@v5
        if: matrix.version != steps.find_last.outputs.last_version
        with:
          context: docker/.
          platforms: ${{ vars.DOCKER_PLATFORM }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_IMAGE }}:${{ matrix.version }}-${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_IMAGE }}:${{ matrix.version }}-latest
          build-args: PYTHON_VERSION=${{ matrix.version }}
          args: --pull
      - name: Build and push last version
        uses: docker/build-push-action@v5
        if: matrix.version == steps.find_last.outputs.last_version
        with:
          context: docker/.
          platforms: ${{ vars.DOCKER_PLATFORM }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_IMAGE }}:${{ matrix.version }}-${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_IMAGE }}:${{ matrix.version }}-latest
            latest
          build-args: PYTHON_VERSION=${{ matrix.version }}
          args: --pull
